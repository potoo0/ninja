name: Release

on:
  push:
    tags: ["v*"]
  pull_request:
  workflow_dispatch:
    inputs:
      target:
        description: 'spec target for build, separate by comma if multiple'
        required: false
        default: 'linux'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  linux:
    if: contains(github.event.inputs.target, 'linux')
    name: Linux
    runs-on: ubuntu-latest
    environment: Linux
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'potoo0/ninja'

      - name: Install depends
        run: |
          sudo apt update && sudo apt install upx rename -y
      - name: Get tag
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Tag Check
        run: |
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
          if [ -z "${{ steps.tag.outputs.tag }}" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_ENV
          fi
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: gngpp
      #     password: ${{ secrets.CR_PAT }}

      - name: Build package
        shell: bash
        env:
          GIT_TOKEN: ${{ secrets.CR_PAT }}
        run: |
          rmi=true os=linux bash +x build.sh
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.CR_PAT }}
          files: |
            uploads/*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  windows:
    if: contains(github.event.inputs.target, 'windows')
    name: Windows
    runs-on: ubuntu-latest
    environment: Windows
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'gngpp/ninjaer'
          token: ${{ secrets.CR_PAT }}

      - name: Install depends
        run: |
          sudo apt update && sudo apt install upx rename -y
      - name: Get tag
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Tag Check
        run: |
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
          if [ -z "${{ steps.tag.outputs.tag }}" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_ENV
          fi
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: gngpp
          password: ${{ secrets.CR_PAT }}

      - name: Build package
        shell: bash
        env:
          GIT_TOKEN: ${{ secrets.CR_PAT }}
        run: |
          rmi=true os=windows bash +x build.sh
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.CR_PAT }}
          files: |
            uploads/*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  macos:
    if: contains(github.event.inputs.target, 'macos')
    runs-on: macos-latest
    name: MacOS
    environment: MacOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'gngpp/ninjaer'
          token: ${{ secrets.CR_PAT }}
          
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Get tag
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Tag Check
        run: |
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
          if [ -z "${{ steps.tag.outputs.tag }}" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_ENV
          fi
      - name: Build
        env:
          GIT_TOKEN: ${{ secrets.CR_PAT }}
        shell: bash
        run: |
          os=macos bash +x build.sh
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.CR_PAT }}
          files: |
            uploads/*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  docker:
    if: contains(github.event.inputs.target, 'docker')
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ linux ]
    environment: Docker
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'gngpp/ninjaer'
          token: ${{ secrets.CR_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get tag
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Login to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: gngpp
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd docker
          tag=${{ steps.tag.outputs.tag }} bash +x build.sh
          cd -
      - name: Docker Hub Description
        if: startsWith(github.ref, 'refs/tags/')
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
          repository: gngpp/ninja
